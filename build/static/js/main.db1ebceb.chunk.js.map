{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","TextForm","useState","text","settext","style","color","placeholder","rows","backgroundColor","event","target","value","disabled","length","showalert","newtext","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","t","parseFloat","toFixed","Alert","prop","alert","class","role","msg","App","setmode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db1ebceb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li> */}\r\n      \r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">About</a>\r\n              </li> */}\r\n      \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n                  <div className={`form-check form-switch text-${props.mode===\"dark\"?'light':'dark'} `}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                  </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, settext] = useState(\"Enter your text \")\r\n\r\nfunction changeHandler(event){\r\n    settext(event.target.value);\r\n\r\n\r\n}    \r\n\r\n\r\nconst clickHandlerUp=()=>{\r\n    var newtext=text.toUpperCase();\r\n    settext(newtext);\r\n    props.showalert(\"Changed to Upper case\",\"Success\")\r\n}\r\nconst clickHandlerLow=()=>{\r\n    var newtext=text.toLowerCase();\r\n    settext(newtext);\r\n    props.showalert(\"Changed to Lower case\",\"Success\")\r\n}\r\n\r\nconst clickHandlerClear=()=>{\r\n    var newtext=\"\";\r\n    settext(newtext);\r\n    props.showalert(\"Clearing the input field\",\"Success\")\r\n}\r\n\r\nconst clickHandlerCopy=()=>{\r\n    var newtext=document.getElementById(\"textarea\")\r\n    newtext.select();\r\n    navigator.clipboard.writeText(newtext.value)\r\n    props.showalert(\"Copy to clipboard\",\"Success\")\r\n}\r\n    return (\r\n    <>\r\n    <div className=\"container my-3\" style={{color:props.mode===\"dark\"?'white':'black'}}  >\r\n<div className=\"mb-3\">\r\n <h2 style={{color:props.mode===\"dark\"?'white':'black'}} >{props.placeholder}</h2>\r\n  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"11\" id=\"textarea\" style={{backgroundColor:props.mode===\"dark\"?'#111827':'#F3F4F6',color:props.mode===\"dark\"?'white':'black'}}  value={text} onChange={changeHandler}></textarea>\r\n</div>\r\n<button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-3 my-1\" onClick={clickHandlerClear} >Clear</button>\r\n<button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-3 my-1\" onClick={clickHandlerUp} >Change to Upper Case</button>\r\n<button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-3 my-1\" onClick={clickHandlerLow} >Change to Lower Case</button>\r\n<button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-3 my-1\" onClick={clickHandlerCopy} >Copy to Clipboard</button>\r\n\r\n\r\n\r\n</div>\r\n\r\n<div className=\"container my-3\" style={{color:props.mode===\"dark\"?'white':'black'}}>\r\n    <h3>You Text Summery</h3>\r\n    <p>{text.split(/\\s+/).filter((t)=>t!==\"\").length} word and  {text.length} characters</p>\r\n    <p>{parseFloat(0.008*text.split(\" \").length).toFixed(2) } Minutes read</p>\r\n    \r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(prop) {\r\n    return (\r\n       prop.alert && <div class=\"alert alert-success  alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{prop.alert.type}</strong>:{prop.alert.msg}\r\n      </div>\r\n    )\r\n}\r\n","import Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport Alert from \"./component/Alert\";\nimport React, { useState } from 'react';\n\n\nfunction App() {\n\n  const [mode, setmode] = useState('light')\n  const togglemode=()=>{\n    if(mode==='light'){\n    setmode('dark')\n    document.body.style.backgroundColor=\"#111827\"\n    showalert(\"Dark Mode enabled\",\"Success\")\n  }\n    else{\n      setmode('light')\n      document.body.style.backgroundColor=\"#F3F4F6\"\n      showalert(\"Light Mode enabled\",\"Success\")\n\n      \n    }\n\n  }\n  const [alert, setalert] = useState(null)\n\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n      \n    })\n    setTimeout(()=>setalert(null),1200)\n  }\n   \n\n  \n  return (\n    <>\n    <Navbar title=\"Text Play\" mode={mode} togglemode={togglemode}/>\n    <Alert alert={alert}/>\n    <TextForm showalert={showalert} placeholder=\"Enter your Text Here\" mode={mode}></TextForm>\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}